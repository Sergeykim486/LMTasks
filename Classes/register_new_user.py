import logging
import Classes.functions as functions
import Classes.buttons as buttons
from Classes.config import ActiveUser, bot, db


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class Reg:
    # –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def reg1(message):
        try:
            username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
            logging.info(f'\n‚ÑπÔ∏è {username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å\n    -    {message.text}\n')
        except Exception as e:
            logging.error(f'\nüÜò –û—à–∏–±–∫–∞!\n    ‚ö†Ô∏è - {e}\n')
            pass
        if message.text == 'üîë –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è':
            if message.chat.id == 5390927006:
                bot.send_message(
                    message.chat.id,
                    "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.",
                    reply_markup=buttons.Buttons(['ok'])
                )
                bot.stop_polling()
            bot.send_message(
                message.chat.id,
                '–ö–∞–∫ –í–∞—Å –∑–æ–≤—É—Ç (—É–∫–∞–∂–∏—Ç–µ –∏–º—è)',
            reply_markup=buttons.clearbuttons()
            )
            bot.register_next_step_handler(message, Reg.reg2)
        else:
            bot.send_message(
                message.chat.id,
                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.',
                reply_markup=buttons.Buttons(['üîë –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'])
            )
            bot.register_next_step_handler(message, Reg.reg1)
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏ –∑–∞–ø—Ä–æ—Å —Ñ–∞–º–∏–ª–∏–∏
    def reg2(message):
        try:
            username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
            logging.info(f'\n‚ÑπÔ∏è {username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å\n    -    {message.text}\n')
        except Exception as e:
            logging.error(f'\nüÜò –û—à–∏–±–∫–∞!\n    ‚ö†Ô∏è - {e}\n')
            pass
        global ActiveUser
        ActiveUser[message.chat.id]['FirstName'] = message.text
        bot.send_message(
            message.chat.id,
            '–£–∫–∞–∂–∏—Ç–µ –í–∞—à—É —Ñ–∞–º–∏–ª–∏—é.',
            reply_markup=buttons.clearbuttons()
        )
        bot.register_next_step_handler(message, Reg.reg3)
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏ –∏ –∑–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    def reg3(message):
        try:
            username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
            logging.info(f'\n‚ÑπÔ∏è {username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å\n    -    {message.text}\n')
        except Exception as e:
            logging.error(f'\nüÜò –û—à–∏–±–∫–∞!\n    ‚ö†Ô∏è - {e}\n')
            pass
        global ActiveUser
        ActiveUser[message.chat.id]['LastName'] = message.text
        bot.send_message(
            message.chat.id,
            '–í–≤–µ–¥–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ (+998 00 000 0000).',
            reply_markup=buttons.clearbuttons()
        )
        bot.register_next_step_handler(message, Reg.reg4)
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    def reg4(message):
        try:
            username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
            logging.info(f'\n‚ÑπÔ∏è {username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å\n    -    {message.text}\n')
        except Exception as e:
            logging.error(f'\nüÜò –û—à–∏–±–∫–∞!\n    ‚ö†Ô∏è - {e}\n')
            pass
        global ActiveUser
        ActiveUser[message.chat.id]['PhoneNumber'] = message.text
        bot.send_message(
            message.chat.id,
            functions.conftext(message, ActiveUser),
            reply_markup=buttons.Buttons(['‚úÖ –î–∞', '‚õîÔ∏è –ù–µ—Ç'])
        )
        bot.register_next_step_handler(message, Reg.reg5)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    def reg5(message):
        try:
            username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
            logging.info(f'\n‚ÑπÔ∏è {username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å\n    -    {message.text}\n')
        except Exception as e:
            logging.error(f'\nüÜò –û—à–∏–±–∫–∞!\n    ‚ö†Ô∏è - {e}\n')
            pass
        global ActiveUser
        if message.text == '‚úÖ –î–∞':
            valuedict = [
                ActiveUser[message.chat.id]['id'],
                ActiveUser[message.chat.id]['FirstName'],
                ActiveUser[message.chat.id]['LastName'],
                ActiveUser[message.chat.id]['PhoneNumber']
            ]
            db.insert_record("Users", valuedict)
            bot.send_message(
                message.chat.id,
                '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!',
                reply_markup=buttons.Buttons(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
            )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False
        elif message.text == '‚õîÔ∏è –ù–µ—Ç':
            bot.send_message(
                message.chat.id,
                '–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ.',
                reply_markup=buttons.Buttons(['üîë –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'])
            )
            bot.register_next_step_handler(message, Reg.reg1)
        else:
            bot.send_message(
                message.chat.id,
                '–í—ã –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!\n' + functions.conftext(message, ActiveUser),
                reply_markup=buttons.Buttons(['‚úÖ –î–∞', '‚õîÔ∏è –ù–µ—Ç'])
            )
            bot.register_next_step_handler(message, Reg.reg5)
