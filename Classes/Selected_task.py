import logging, datetime, telebot
import Classes.functions as functions
import Classes.buttons as buttons
from datetime import datetime
from Classes.config import ActiveUser, bot, sendedmessages, db, mainclass


class Task:

    def __init__(self, main):
        self.bot = main

    def task1(message):
        username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
        logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
        global ActiveUser
        if message.text == 'üëç –ü—Ä–∏–Ω—è—Ç—å':
            processing = bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEJL8dkedQ1ckrfN8fniwY7yUc-YNaW_AACIAAD9wLID1KiROfjtgxPLwQ", reply_markup=buttons.clearbuttons())
            if db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[11] == 5:
                stat = 6
            else:
                stat = 2
            if db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[11] == 1 or db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[11] == 5:
                db.update_records(
                    'Tasks',
                    [
                        'confirmed',
                        'master',
                        'status'
                    ], [
                        datetime.now().strftime("%d.%m.%Y %H:%M"),
                        message.chat.id, stat
                    ],
                    'id',
                    ActiveUser[message.chat.id]['task']
                )
                tk = functions.curtask(ActiveUser[message.chat.id]['task'])
                mes = str(db.get_record_by_id('Users', message.chat.id)[2]) + ' ' + str(db.get_record_by_id('Users', message.chat.id)[1]) + '\n–ü—Ä–∏–Ω—è–ª –∑–∞—è–≤–∫—É:\n\n' + tk
                mark = ''
                exn = message.chat.id
                if sendedmessages != None:
                    for line in sendedmessages:
                        functions.mesdel(line[0], line[1])
                functions.sendtoall(mes, mark, exn)
                functions.mesdel(message.chat.id, processing.message_id)
                bot.send_message(
                    message.chat.id,
                    '–í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞—è–≤–∫—É.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é',
                    reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
                )
                ActiveUser[message.chat.id]['Pause_main_handler'] = False
                ActiveUser[message.chat.id]['Finishedop'] = True
                ActiveUser[message.chat.id]['block_main_menu'] = False
            else:
                bot.send_message(
                    message.chat.id,
                    "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —ç—Ç—É –∑–∞—è–≤–∫—É!",
                    reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
                )
                ActiveUser[message.chat.id]['Pause_main_handler'] = False
                ActiveUser[message.chat.id]['Finishedop'] = True
                ActiveUser[message.chat.id]['block_main_menu'] = False
            functions.mesdel(message.chat.id, message.message_id)
            functions.deletentm(ActiveUser[message.chat.id]['task'])
        elif message.text == 'üñäÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç—å':
            bot.send_message(
                message.chat.id,
                '–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç—å...',
                reply_markup=buttons.clearbuttons()
            )
            functions.mesdel(message.chat.id, message.message_id)
            bot.register_next_step_handler(message, Task.task5)
        elif message.text == 'üìé –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å' or message.text == 'üìé –ù–∞–∑–Ω–∞—á–∏—Ç—å':
            users = db.select_table('Users')
            bot.send_message(
                message.chat.id,
                '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞...',
                reply_markup=buttons.Buttons(functions.listgen(users, [0, 1, 2], 3), 1)
            )
            bot.register_next_step_handler(message, Task.task4)
        elif message.text == '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ':
            processing = bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEJL8dkedQ1ckrfN8fniwY7yUc-YNaW_AACIAAD9wLID1KiROfjtgxPLwQ", reply_markup=buttons.clearbuttons())
            manager = str(db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[6])
            if manager == str(message.chat.id):
                if db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[11] == 2:
                    stat = 3
                else:
                    stat = 7
                db.update_records(
                    'Tasks',[
                        'done',
                        'status'
                    ],[
                        datetime.now().strftime("%d.%m.%Y %H:%M"),
                        stat
                    ],
                    'id',
                    ActiveUser[message.chat.id]['task']
                )
                tk = functions.curtask(ActiveUser[message.chat.id]['task'])
                mes = str(db.get_record_by_id('Users', message.chat.id)[2]) + ' ' + str(db.get_record_by_id('Users', message.chat.id)[1]) + '\n–í—ã–ø–æ–ª–Ω–∏–ª –∑–∞—è–≤–∫—É:\n\n' + tk
                mark = ''
                exn = message.chat.id
                functions.sendtoall(mes, mark, exn)
                functions.mesdel(message.chat.id, processing.message_id)
                bot.send_message(
                    message.chat.id,
                    '–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∑–∞—è–≤–∫—É.',
                    reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
                )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False
        elif message.text == 'üôÖ‚Äç‚ôÇÔ∏è –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –∑–∞—è–≤–∫–∏':
            manager = str(db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[6])
            if manager == str(message.chat.id):
                processing = bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEJL8dkedQ1ckrfN8fniwY7yUc-YNaW_AACIAAD9wLID1KiROfjtgxPLwQ", reply_markup=buttons.clearbuttons())
                confdate = db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[5]
                db.update_records(
                    'Tasks',
                    [
                        'more',
                        'master',
                        'status'
                    ], [
                        '–ú–∞—Å—Ç–µ—Ä ' + str(db.get_record_by_id('Users', message.chat.id)[2]) + ' ' + str(db.get_record_by_id('Users', message.chat.id)[1]) + ' –ø—Ä–∏–Ω—è–ª –∑–∞—è–≤–∫—É ' + str(confdate) + '.\n ' + str(datetime.now().strftime("%d.%m.%Y %H:%M")) + '–æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è',
                        '',
                        1
                    ],
                    'id',
                    ActiveUser[message.chat.id]['task']
                )
                tk = functions.curtask(ActiveUser[message.chat.id]['task'])
                mes = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ' + str(db.get_record_by_id('Users', message.chat.id)[1]) + '–û—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –∑–∞—è–≤–∫–∏:\n\n' + tk
                mark = ''
                exn = message.chat.id
                functions.sendtoall(mes, mark, exn)
                functions.mesdel(message.chat.id, processing.message_id)
                bot.send_message(
                    message.chat.id,
                    '–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –∑–∞—è–≤–∫–∏.',
                    reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
                )
                ActiveUser[message.chat.id]['Pause_main_handler'] = False
                ActiveUser[message.chat.id]['Finishedop'] = True
                ActiveUser[message.chat.id]['block_main_menu'] = False
            else:
                master = db.get_record_by_id('Users', manager)[1]
                bot.send_message(
                    message.chat.id,
                    '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —ç—Ç–æ–π –∑–∞—è–≤–∫–∏, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –Ω–µ –í–∞—à–∞.\n–ó–∞—è–≤–∫—É –ø—Ä–∏–Ω—è–ª ' + str(master),
                    reply_markup=buttons.Buttons(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'])
                )
                ActiveUser[message.chat.id]['Pause_main_handler'] = False
                ActiveUser[message.chat.id]['Finishedop'] = True
                ActiveUser[message.chat.id]['block_main_menu'] = False
        elif message.text == 'üö´ –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É':
            manager = str(db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[2])
            bot.send_message(
                message.chat.id,
                '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É?',
                reply_markup=buttons.Buttons(['‚úÖ –î–∞', '‚õîÔ∏è –ù–µ—Ç'])
            )
            bot.register_next_step_handler(message, Task.task2)
        elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
            bot.send_message(
                message.chat.id,
                '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é.',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False
        elif message.text == '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏':
            bot.send_message(
                message.chat.id,
                '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏.\n\n‚ÄºÔ∏è –í–ù–ò–ú–ê–ù–ò–ï ‚ÄºÔ∏è\n–£—á—Ç–∏—Ç–µ —á—Ç–æ —Å—Ç–∞—Ä—ã–π —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω –Ω–æ–≤—ã–º –ø–æ—ç—Ç–æ–º—É —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Ç–∞—Ä—ã–π –∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ.',
                reply_markup=buttons.clearbuttons()
            )
            bot.register_next_step_handler(message, Task.task7_1)
        elif message.text == 'üìç –õ–æ–∫–∞—Ü–∏—è':
            location = db.get_record_by_id('Locations', db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[12])
            if location != None:
                loc = telebot.types.Location(location[4], location[3])
                bot.send_location(message.chat.id, loc.latitude, loc.longitude)
                bot.send_message(
                    message.chat.id,
                    '–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∏ –∑–∞–∫—Ä—Ä–µ–ø–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é –∑–∞ —ç—Ç–æ–π –∑–∞—è–≤–∫–æ–π. –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é',
                    reply_markup=buttons.Buttons(['üìç –£–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞—Ü–∏—é', 'üö´ –û—Ç–º–µ–Ω–∞'])
                )
                bot.register_next_step_handler(message, Task.locations1)
            else:
                bot.send_message(
                    message.chat.id,
                    '–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è –Ω–æ —É–∫–∞–∑–∞–Ω–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è –ª–∏–±–æ –Ω–µ –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞, –∏–ª–∏ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é',
                    reply_markup=buttons.Buttons(['üìç –£–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞—Ü–∏—é', 'üö´ –û—Ç–º–µ–Ω–∞'])
                )
                bot.register_next_step_handler(message, Task.locations1)
        else:
            bot.send_message(
                message.chat.id,
                '–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞.',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False

    def locations1(message):
        global ActiveUser
        username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
        logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
        if message.text == 'üìç –£–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞—Ü–∏—é':
            logging.info('–õ–æ–∫–∞—Ü–∏–∏')
            inn = db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[3]
            locations = db.select_table_with_filters('Locations', {'inn': inn})
            buttonsloc = []
            buttonsloc.append('üÜï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª–∏–∞–ª')
            if len(locations) > 0:
                for location in locations:
                    line = str(location[0]) + ' ' + str(location[2])
                    print(line)
                    buttonsloc.append(line)
            buttonsloc.append('üö´ –û—Ç–º–µ–Ω–∞')
            print(buttonsloc)
            bot.send_message(
                message.chat.id,
                '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª',
                reply_markup=buttons.Buttons(buttonsloc, 2)
            )
            bot.register_next_step_handler(message, Task.locations2)
        elif message.text == 'üö´ –û—Ç–º–µ–Ω–∞':
            print('–ù–∞–∂–∞—Ç–∞ –æ—Ç–º–µ–Ω–∞')
            bot.send_message(
                message.chat.id,
                '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é.',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False

    def locations2(message):
        global ActiveUser
        username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
        logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
        ActiveUser[message.chat.id]['inn'] = db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[3]
        if message.text == 'üÜï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª–∏–∞–ª':
            bot.send_message(
                message.chat.id,
                '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–∫–∞—Ü–∏—é.',
                reply_markup=buttons.clearbuttons()
            )
            bot.register_next_step_handler(message, tnl1)
        elif message.text == 'üö´ –û—Ç–º–µ–Ω–∞':
            bot.send_message(
                message.chat.id,
                '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é.',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False
        elif message.text.split()[0].isdigit():
            selected = db.get_record_by_id('Locations', message.text.split()[0])
            db.update_records(
                'Tasks',
                ['location'],
                [selected[0]],
                'id',
                ActiveUser[message.chat.id]['task']
            )
            bot.send_message(
                message.chat.id,
                f'–í—ã–±—Ä–∞–Ω–∞ –ª–æ–∫–∞—Ü–∏—è {selected[2]}',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False
        else:
            inn = db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[3]
            locations = db.select_table_with_filters('Locations', {'inn': inn})
            buttonsloc = []
            buttonsloc.append('üÜï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª–∏–∞–ª')
            if len(locations) > 0:
                for location in locations:
                    buttonsloc.append(str(location[0]) + ' ' + str(location[2]))
            buttonsloc.append('üö´ –û—Ç–º–µ–Ω–∞')
            if len(locations) > 0:
                bot.send_message(
                    message.chat.id,
                    '–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞!\n–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª',
                    reply_markup=buttons.Buttons(buttonsloc, 2)
                )
            bot.register_next_step_handler(message, Task.locations2)

    def task2(message):
        global ActiveUser
        username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
        logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
        if message.text == '‚úÖ –î–∞':
            bot.send_message(
                message.chat.id,
                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–º–µ–Ω—ã –∑–∞—è–≤–∫–∏.',
                reply_markup=buttons.clearbuttons()
            )
            bot.register_next_step_handler(message, Task.task3)
        elif message.text == '‚õîÔ∏è –ù–µ—Ç':
            bot.send_message(
                message.chat.id,
                '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é.',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False

    def task3(message):
        global ActiveUser
        username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
        logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
        processing = bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEJL8dkedQ1ckrfN8fniwY7yUc-YNaW_AACIAAD9wLID1KiROfjtgxPLwQ", reply_markup=buttons.clearbuttons())
        db.update_records(
            'Tasks',[
                'canceled',
                'userc',
                'more',
                'status'
            ],[
                datetime.now().strftime("%d.%m.%Y %H:%M"),
                message.chat.id,
                message.text,
                4
            ],
            'id',
            ActiveUser[message.chat.id]['task']
        )
        tk = functions.curtask(ActiveUser[message.chat.id]['task'])
        mes = str(db.get_record_by_id('Users', message.chat.id)[2]) + ' ' + str(db.get_record_by_id('Users', message.chat.id)[1]) + '\n–û—Ç–º–µ–Ω–∏–ª –∑–∞—è–≤–∫—É:\n\n' + tk + '\n\n–ü–†–ò–ß–ò–ù–ê:\n' + message.text
        mark = ''
        exn = message.chat.id
        functions.sendtoall(mes, mark, exn)
        functions.mesdel(message.chat.id, processing.message_id)
        bot.send_message(
            message.chat.id,
            '–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é.',
            reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
        )
        ActiveUser[message.chat.id]['Pause_main_handler'] = False
        ActiveUser[message.chat.id]['Finishedop'] = True
        ActiveUser[message.chat.id]['block_main_menu'] = False

    def task4(message):
        global ActiveUser
        username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
        logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
        if db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[11] == 5:
            stat = 6
        else:
            stat = 2
        if message.text.split()[1] is None:
            users = db.select_table('Users')
            bot.send_message(
                message.chat.id,
                '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞...',
                reply_markup=buttons.Buttons(functions.listgen(users, [0, 1, 2], 3), 1)
            )
            bot.register_next_step_handler(message, Task.task4)
        else:
            processing = bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEJL8dkedQ1ckrfN8fniwY7yUc-YNaW_AACIAAD9wLID1KiROfjtgxPLwQ", reply_markup=buttons.clearbuttons())
            userm = message.text.split()[1]
            
            db.update_records(
                'Tasks',
                [
                    'confirmed',
                    'master',
                    'status'
                ], [
                    datetime.now().strftime("%d.%m.%Y %H:%M"),
                    userm, stat
                ],
                'id',
                ActiveUser[message.chat.id]['task']
            )
            if sendedmessages != None:
                for line in sendedmessages:
                    functions.mesdel(line[0], line[1])
            tk = functions.curtask(ActiveUser[message.chat.id]['task'])
            mes = str(db.get_record_by_id('Users', userm)[2]) + ' ' + str(db.get_record_by_id('Users', userm)[1]) + '\n–±—ã–ª –Ω–∞–∑–Ω–∞—á–µ–Ω –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º –∑–∞—è–≤–∫–∏:\n\n' + tk
            exn = message.chat.id
            functions.sendtoall(mes, '', exn)
            functions.mesdel(message.chat.id, processing.message_id)
            bot.send_message(
                message.chat.id,
                '–ú–∞—Å—Ç–µ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False

    def task5(message):
        global ActiveUser
        username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
        logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
        processing = bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEJL8dkedQ1ckrfN8fniwY7yUc-YNaW_AACIAAD9wLID1KiROfjtgxPLwQ", reply_markup=buttons.clearbuttons())
        tasktext = db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[4]
        db.update_records(
            'Tasks',
            ['task'],
            [tasktext + '\n\n ' + username + ' –¥–æ–ø–æ–ª–Ω–∏–ª(–∞) –∑–∞—è–≤–∫—É...\n' + message.text],
            'id',
            ActiveUser[message.chat.id]['task']
        )
        tk = functions.curtask(ActiveUser[message.chat.id]['task'])
        mes = str(db.get_record_by_id('Users', message.chat.id)[2]) + ' ' + str(db.get_record_by_id('Users', message.chat.id)[1]) + '\n –¥–æ–ø–æ–ª–Ω–∏–ª(–∞) –∑–∞—è–≤–∫—É:\n\n' + tk
        mark = ''
        exn = message.chat.id
        functions.sendtoall(mes, mark, exn)
        if sendedmessages != None:
            for line in sendedmessages:
                functions.mesdel(line[0], line[1])
        functions.mesdel(message.chat.id, processing.message_id)
        bot.send_message(
            message.chat.id,
            '–ó–∞—è–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–µ–Ω–∞.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é',
            reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
        )
        ActiveUser[message.chat.id]['Pause_main_handler'] = False
        ActiveUser[message.chat.id]['Finishedop'] = True
        ActiveUser[message.chat.id]['block_main_menu'] = False

    def task6(message):
        global ActiveUser
        username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
        logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
        if message.text == '‚úÖ –î–∞':
            processing = bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEJL8dkedQ1ckrfN8fniwY7yUc-YNaW_AACIAAD9wLID1KiROfjtgxPLwQ", reply_markup=buttons.clearbuttons())
            db.update_records(
                'Tasks',
                ['contragent'],
                [ActiveUser[message.chat.id]['changecontrintask']],
                'id',
                ActiveUser[message.chat.id]['task']
            )
            client = db.get_record_by_id('Contragents', ActiveUser[message.chat.id]['changecontrintask'])[1]
            tk = functions.curtask(ActiveUser[message.chat.id]['task'])
            mes = str(db.get_record_by_id('Users', message.chat.id)[2]) + ' ' + str(db.get_record_by_id('Users', message.chat.id)[1]) + '\n –ò–∑–º–µ–Ω–∏–ª(–∞) –∫–ª–∏–µ–Ω—Ç–∞ –≤ –∑–∞—è–≤–∫–µ:\n\n' + tk
            mark = ''
            functions.sendtoall(mes, mark, message.chat.id)
            functions.mesdel(message.chat.id, processing.message_id)
            bot.send_message(
                message.chat.id,
                f'–ö–ª–∏–µ–Ω—Ç –≤ –∑–∞—è–≤–∫–µ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {client}.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
        elif message.text == '‚õîÔ∏è –ù–µ—Ç':
            bot.send_message(
                message.chat.id,
                '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é.',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
        else:
            bot.send_message(
                message.chat.id,
                '–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞',
                reply_markup=buttons.Buttons(['‚úÖ –î–∞', '‚õîÔ∏è –ù–µ—Ç'])
            )
            bot.register_next_step_handler(message, Task.task6)

    def task7_1(message):
        global ActiveUser
        username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
        logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
        taskt = db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[4]
        ActiveUser[message.chat.id]['newtasktext'] = message.text
        bot.send_message(
            message.chat.id,
            f'–¢–µ–∫—Å—Ç –∑–∞—è–≤–∫—É –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω —Å:\n{taskt}\n–ù–∞:\n{message.text}\n\n –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...',
            reply_markup=buttons.Buttons(['‚úÖ –î–∞','‚õîÔ∏è –ù–µ—Ç'])
        )
        bot.register_next_step_handler(message, Task.task7_2)

    def task7_2(message):
        global ActiveUser
        username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
        logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
        if message.text == '‚úÖ –î–∞':
            processing = bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAEJL8dkedQ1ckrfN8fniwY7yUc-YNaW_AACIAAD9wLID1KiROfjtgxPLwQ", reply_markup=buttons.clearbuttons())
            print(ActiveUser[message.chat.id]['newtasktext'])
            db.update_records(
                'Tasks',
                ['task'],
                [ActiveUser[message.chat.id]['newtasktext']],
                'id',
                ActiveUser[message.chat.id]['task']
            )
            tk = functions.curtask(ActiveUser[message.chat.id]['task'])
            mes = str(db.get_record_by_id('Users', message.chat.id)[2]) + ' ' + str(db.get_record_by_id('Users', message.chat.id)[1]) + '\n –≤–Ω–µ—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞—è–≤–∫—É\n\n' + tk
            mark = ''
            functions.sendtoall(mes, mark, message.chat.id)
            functions.mesdel(message.chat.id, processing.message_id)
            bot.send_message(
                message.chat.id,
                '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–Ω–µ–Ω–µ–Ω–∞.',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False
        elif message.text == '‚õîÔ∏è –ù–µ—Ç':
            bot.send_message(
                message.chat.id,
                '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é.',
                reply_markup=buttons.Buttons(['üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞', 'üîÉ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫', 'üñ®Ô∏è –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏–∫–∏', 'üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞', 'üìà –û—Ç—á–µ—Ç—ã', 'üó∫Ô∏è –ö–∞—Ä—Ç–∞', 'üì¢ –ù–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ–º'],3)
            )
            ActiveUser[message.chat.id]['Pause_main_handler'] = False
            ActiveUser[message.chat.id]['Finishedop'] = True
            ActiveUser[message.chat.id]['block_main_menu'] = False
        else:
            bot.send_message(
                message.chat.id,
                '–í—ã –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n–ó–∞–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—ã–π —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏ –Ω–∞ –Ω–æ–≤—ã–π',
                reply_markup=buttons.Buttons(['‚úÖ –î–∞','‚õîÔ∏è –ù–µ—Ç'])
            )
            bot.register_next_step_handler(message, Task.task7_2)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ —Ñ–∏–ª–∏–∞–ª–∞ –≤ –∞–∫–Ω–∏–≤–Ω–æ–π –∑–∞—è–≤–∫–µ
def tnl1(message):
    username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
    logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
    global ActiveUser
    if message.content_type == 'location':
        lon, lat = message.location.longitude, message.location.latitude
        ActiveUser[message.chat.id]['lon'] = lon
        ActiveUser[message.chat.id]['lat'] = lat
        bot.send_message(
            message.chat.id,
            '–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏\n–ù–ê–ü–†–ò–ú–ï–†:\n–§–∏–ª–∏–∞–ª —á–∏–ª–∞–Ω–∑–∞—Ä –∏–ª–∏ –≥–æ–ª–æ–≤–Ω–æ–π –æ—Ñ–∏—Å',
        )
        bot.register_next_step_handler(message, tnl2)
    else:
        bot.send_message(
            message.chat.id,
            '–í—ã –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é.\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª–æ–∫–∞—Ü–∏—é.',
            reply_markup=buttons.clearbuttons()
        )
        bot.register_next_step_handler(message, tnl1)

def tnl2(message):
    username = db.get_record_by_id('Users', message.chat.id)[2] + ' ' + db.get_record_by_id('Users', message.chat.id)[1]
    logging.info(f'{username} –û—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å - {message.text}')
    global ActiveUser
    ActiveUser[message.chat.id]['locationname'] = message.text
    ActiveUser[message.chat.id]['inn'] = db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[3]
    db.insert_record(
        'Locations',
        [
            None,
            ActiveUser[message.chat.id]['inn'],
            ActiveUser[message.chat.id]['locationname'],
            ActiveUser[message.chat.id]['lat'],
            ActiveUser[message.chat.id]['lon']
        ]
    )
    inn = db.get_record_by_id('Tasks', ActiveUser[message.chat.id]['task'])[3]
    locations = db.select_table_with_filters('Locations', {'inn': inn})
    buttonsloc = []
    buttonsloc.append('üÜï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª–∏–∞–ª')
    if len(locations) > 0:
        for location in locations:
            buttonsloc.append(str(location[0]) + ' ' + str(location[2]))
    buttonsloc.append('üö´ –û—Ç–º–µ–Ω–∞')
    if len(locations) > 0:
        bot.send_message(
            message.chat.id,
            '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª...',
            reply_markup=buttons.Buttons(buttonsloc, 2)
        )
    bot.register_next_step_handler(message, Task.locations2)